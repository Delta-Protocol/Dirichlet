/* [wxMaxima batch file version 1] [ DO NOT EDIT BY HAND! ]*/
/* [ Created with wxMaxima version 12.01.0 ] */

/* [wxMaxima: input   start ] */
load("lrats")$
load("format")$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
swapsides(eqs) := map(lambda([u],rhs(u)=lhs(u)), eqs)$
backsubst(eqs,expr) := subst(swapsides(eqs),subst(swapsides(-eqs),expr))$
backratsubst(eqs,expr) := lratsubst(swapsides(eqs),expr)$
print1d(expr) := block([display2d], display2d: false, print(expr))$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
checkvalues: [n=868,a[1]=2,b[1]=1,a[2]=1,b[2]=1,x[0]=25,y[0]=33];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
vardefs: [a[1]=a1,a[2]=a2,a[3]=a3,b[1]=b1,b[2]=b2,b[3]=b3,c[1]=c1,c[2]=c2,c[3]=c3,x[0]=x0,y[0]=y0];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
Line(p, m) := (y-p[2])/(x-p[1]) = -m$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
L1a: Line([x[0],y[0]], a[1]/b[1]);
L2a: Line([x[0],y[0]], a[2]/b[2]);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
detdef: a[1]*b[2]-b[1]*a[2]=1;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
LinearForm(eq) := block([t1,t2,t3],
    t1: eq*part(eq,1,2)*part(eq,2,1,2),
    t2: lhs(expand(t1-rhs(t1))),
    t3: get_coef(coeffs(t2,x,y),0,0),
    t2-t3=-t3
)$
L1b: LinearForm(L1a);
L2b: LinearForm(L2a);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
cdefs: [c[1]=rhs(L1b),c[2]=rhs(L2b)];
xy0defs: lratsubst(detdef,solve(cdefs,[x[0],y[0]]))[1];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
p3defs: [a[3]=a[1]+a[2],b[3]=b[1]+b[2],c[3]=c[1]+c[2]];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
L1c: backsubst(cdefs,L1b);
L2c: backsubst(cdefs,L2b);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
xy: [x=x[0]-b[1]*v+b[2]*u,y=y[0]+a[1]*v-a[2]*u];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
uv: backratsubst(cdefs,subst(detdef,ratsimp(solve(xy,[u,v])[1])));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
hxy: x*y=n;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
huv: subst(xy,hxy);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
xy;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
huvc: format(subst(xy0defs,huv),%lhs,%prod,%p(a[1],a[2],b[1],b[2]));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
uuvvdefs: [uu=u+c[1],vv=v+c[2]];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
huvc2: subst(uuvvdefs,backsubst(uuvvdefs,huvc));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
print1d(subst(vardefs,huv))$
print1d(subst(vardefs,huvc2))$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
xyc: subst(uuvvdefs,backsubst(uuvvdefs,format(subst(xy0defs,xy),%list,%rhs,%prod,%p(a[1],a[2],b[1],b[2]))));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
depends(v,u)$
depends(u,v)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
dvdu: solve(diff(huv,u),diff(v,u))[1];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
dvdu2: ratsimp(solve(subst([diff(v,u)=-1],dvdu),v)[1]);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
udiag5: solve(subst(dvdu2,huv),u)[2];
vdiag5: solve(subst(solve(dvdu2,u)[1],huv),v)[2];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
checkcoord: ev([udiag5,vdiag5],checkvalues),numer;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
udiag6: format(udiag5,%rhs,%frac,%poly(x[0],y[0]),%factor);
vdiag6: format(vdiag5,%rhs,%frac,%poly(x[0],y[0]),%factor);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
udiag7: backratsubst(cdefs,subst(detdef,subst(swapsides(p3defs),udiag6)));
vdiag7: backratsubst(cdefs,subst(detdef,subst(swapsides(p3defs),vdiag6)));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
udiag7part: part(udiag7,2,1,1,1);
vdiag7part: part(vdiag7,2,1,1,1);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
upart1: b[1]*a[3]+a[1]*b[3];
vpart1: b[2]*a[3]+a[2]*b[3];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
expand(subst(p3defs,upart1)-udiag7part);
expand(subst(p3defs,vpart1)-vdiag7part);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
udiag8: subst([udiag7part=backsubst(p3defs,factor(udiag7part-lhs(detdef))+rhs(detdef))],udiag7);
vdiag8: subst([vdiag7part=backsubst(p3defs,factor(vdiag7part-lhs(detdef))+rhs(detdef))],vdiag7);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
udiag9: format(udiag8,%f-c[1]);
vdiag9: format(vdiag8,%f-c[2]);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
udiag9part: part(udiag9,2,1);
vdiag9part: part(vdiag9,2,1);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
udiag10: subst([udiag9part=isqrt(udiag9part^2)],udiag9);
vdiag10: subst([vdiag9part=isqrt(vdiag9part^2)],vdiag9);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
tangent1: backratsubst(cdefs,subst([detdef],ratsimp(udiag5+vdiag5)));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
tangent1part: part(tangent1,2,1,2,1);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
tangent2: subst([tangent1part=backratsubst(p3defs,factor(tangent1part))],tangent1);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
tangent3: solve(backratsubst(p3defs,tangent2),v)[1];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
tangent3part: part(tangent3,2,2);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
tangent4: subst([tangent3part=isqrt(tangent3part^2)],tangent3);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
u2v1: solve(huv,v)[1];
v2u1: solve(huv,u)[1];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
u2v1part: part(u2v1,2,1,1,1,1);
v2u1part: part(v2u1,2,1,1,1,1);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
u2v2: format(subst([u2v1part=format(backratsubst(cdefs,format(subst([detdef],format(u2v1part,%p(u),%f)))),%f-4*a[1]*b[1]*n)],u2v1),%rhs,%frac);
v2u2: format(subst([v2u1part=format(backratsubst(cdefs,format(subst([detdef],format(v2u1part,%p(v),%f)))),%f-4*a[2]*b[2]*n)],v2u1),%rhs,%frac);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
u2v2part: part(u2v2,2,1)-part(u2v2,2,1,1);
v2u2part: part(v2u2,2,1)-part(v2u2,2,1,1);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
u2v3: lhs(u2v2)=(part(u2v2,2,1,1)+factor(expand(subst(xy0defs,u2v2part))+2*a[1]*b[1]*c[2]))/part(u2v2,2,2)-c[2];
v2u3: lhs(v2u2)=(part(v2u2,2,1,1)+factor(expand(subst(xy0defs,v2u2part))+2*a[2]*b[2]*c[1]))/part(v2u2,2,2)-c[1];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
print1d(subst(vardefs,u2v3))$
print1d(subst(vardefs,v2u3))$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
expand(subst(solve(detdef,a[1]),subst(cdefs,ratsimp(u2v2-u2v3))));
expand(subst(solve(detdef,a[1]),subst(cdefs,ratsimp(v2u2-v2u3))));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
cdefs;
p3defs;
c4def: c[4] = (x[0] - b[1]*r[3])*a[3] + (y[0] + a[1]*r[3])*b[3];
backratsubst(p3defs,solve(subst(detdef,factor(expand(subst(p3defs,c4def-cdefs[1]-cdefs[2])))),c[4])[1]);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
xy0defs;
expand((uc1+1)^2)-uc1^2;
(a[1]*b[2]+b[1]*a[2])-lhs(detdef)+rhs(detdef);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Using UU-VV coordinates to dramatically simplify derivation of formulas.
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
depends(uu,vv)$
depends(vv,uu)$
huuvv: backsubst(uuvvdefs,huvc);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
uu2vv1: subst(uuvvdefs,format(subst(expand(detdef^2),solve(huuvv,vv)[1]),%rhs,%frac,%p(uu)))-c[2];
vv2uu1: subst(uuvvdefs,format(subst(expand(detdef^2),solve(huuvv,uu)[1]),%rhs,%frac,%p(vv)))-c[1];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
format(expand(diff(huuvv,uu)),%lhs,%p(diff(vv,uu)));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
dvvduu: solve(diff(huuvv,uu),diff(vv,uu))[1];
uudiag: subst(detdef,ratsimp(solve(subst(ratsimp(solve(subst([diff(vv,uu)=-1],dvvduu),vv)[1]),huuvv),uu)[2]))$
vvdiag: subst(detdef,ratsimp(solve(subst(ratsimp(solve(subst([diff(vv,uu)=-1],dvvduu),uu)[1]),huuvv),vv)[2]))$
uudiag2: subst(uuvvdefs,backsubst(p3defs,factor(uudiag)))-c[1];
vvdiag2: subst(uuvvdefs,backsubst(p3defs,factor(vvdiag)))-c[2];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
print1d(subst(vardefs,uudiag2))$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
subst(append(cdefs,p3defs,checkvalues),[uudiag2,vvdiag2]),numer;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: comment start ]
Try solving for x and y first and then converting to u and v.
   [wxMaxima: comment end   ] */

/* [wxMaxima: input   start ] */
depends(y,x)$
depends(x,y)$
xdiag1: radcan(solve(subst([diff(y,x)=-a[3]/b[3]],diff(solve(hxy,y)[1],x)),x)[2]);
ydiag1: radcan(solve(subst(xdiag1,hxy),y)[1]);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
uxydiag1: subst(detdef,format(solve(subst(append(xy0defs,[xdiag1,ydiag1]),xy),[u,v])[1][1],%rhs,%frac,%p(sqrt(n)),%f));
vxydiag1: subst(detdef,format(solve(subst(append(xy0defs,[xdiag1,ydiag1]),xy),[u,v])[1][2],%rhs,%frac,%p(sqrt(n)),%f));
subst(append(cdefs,p3defs,checkvalues),[uxydiag1,vxydiag1]),numer;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
dvduc: subst(uuvvdefs,format(expand(subst([diff(vv,uu)=-1],diff(backsubst(uuvvdefs,huvc2),uu))),%lhs,%p(uu,vv)));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
dvduc2: factor(ratsimp(dvduc-part(dvduc,1,2)));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
dfdefs: [d[1]=a[1]*b[1],d[2]=a[2]*b[2],d[3]=a[3]*b[3],f[1,2]=a[1]*b[2]+b[1]*a[2]];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
backratsubst(dfdefs,dvduc);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
backratsubst(dfdefs,uudiag2);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
format(subst(uuvvdefs,backratsubst(dfdefs,backsubst(uuvvdefs,uu2vv1+c[2]))),%rhs,%frac)-c[2];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
dvduc3: factor(backratsubst(dfdefs,dvduc2));
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
solve(subst([diff(y,x)=a[1]],diff(solve(hxy,y)[1],x)),x)[2];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
lines: [a[1]*x+b[1]*y=c[1],a[2]*x+b[2]*y=c[2]];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
subst([x=x[2],y=y[2]],lines[2]);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
subst([x=x[4],y=y[4]],lines[1]);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
subst([x=x[2],y=y[2]],uv[1]);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
subst([x=x[4],y=y[4]],uv[2]);
/* [wxMaxima: input   end   ] */

/* Maxima can't load/batch files which end with a comment! */
"Created with wxMaxima"$
